# -*- coding: utf-8 -*-
"""Untitled61.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/197XfgkLPogoD4zwxOxK5_ZRJGfmOUHrm
"""

import numpy as np

# Read input
n, m = map(int, input().split())
matrices = [np.array([list(map(float, input().split())) for _ in range(m)]) for _ in range(n)]

# Find the pair of matrices with the maximum determinant after matrix multiplication
max_det = float('-inf')
selected_pair = None

for i in range(n):
    for j in range(i + 1, n):
        det_ij = np.linalg.det(np.dot(matrices[i], matrices[j]))
        if det_ij > max_det:
            max_det = det_ij
            selected_pair = (i, j)

# Multiply the matrix with the larger determinant by the matrix with the smaller determinant
result_matrix = np.dot(matrices[selected_pair[1]], matrices[selected_pair[0]])

# Invert the result matrix
result_matrix_inv = np.linalg.inv(result_matrix)

# Print the result matrix with up to three decimal places
for row in result_matrix_inv:
    print(" ".join(format(x, ".3f") for x in row))